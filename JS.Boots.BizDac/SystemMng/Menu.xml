<?xml version="1.0" encoding="utf-8" ?>

<sqlMap namespace="JS.Boots.BizDac.SystemMng" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ibatis.apache.org/mapping">

  <alias>
    <typeAlias alias="MenuT" type="JS.Boots.Data.SystemMng.MenuT" />
    <typeAlias alias="MenuSearchT" type="JS.Boots.Data.SystemMng.MenuSearchT" />
  </alias>

  <statements>
    <select id="MenuDac.SelectMenuTree" parameterClass="MenuSearchT" resultClass="MenuT">
      /* MenuDac.SelectMenuTree 메뉴Tree 조회 */
      SELECT
      MENU_CODE                      AS "MenuCode"                     /* 메뉴코드 */
      , UPPER_MENU_CODE                AS "UpperMenuCode"                /* 상위메뉴코드 */
      , MENU_NM                        AS "MenuNm"                       /* 메뉴명 */
      , MENU_TY_CODE                   AS "MenuTyCode"                   /* 메뉴유형코드 */
      , CNTNTS_TY_CODE                 AS "CntntsTyCode"                 /* 컨텐츠유형코드 */
      , LINK_TY_CODE                   AS "LinkTyCode"                   /* 링크유형코드 */
      , MENU_URL                       AS "MenuUrl"                      /* 메뉴URL */
      , SORT_ORDR                      AS "SortOrdr"                     /* 정렬순서 */
      , USE_AT                         AS "UseAt"                        /* 사용여부 */
      , TRIM(BOTH '-' FROM SYS_CONNECT_BY_PATH(strRank,'-')) AS "Id"
      , NVL(TRIM(BOTH '-' FROM SUBSTR( SYS_CONNECT_BY_PATH(strRank,'-'), 1, LENGTH(SYS_CONNECT_BY_PATH(strRank,'-'))-2)),0) AS "Pid"
      FROM (
      SELECT
      MENU_CODE
      , UPPER_MENU_CODE
      , MENU_NM
      , MENU_TY_CODE
      , CNTNTS_TY_CODE
      , LINK_TY_CODE
      , MENU_URL
      , SORT_ORDR
      , USE_AT
      , rank() over(partition by UPPER_MENU_CODE order by UPPER_MENU_CODE, SORT_ORDR, MENU_CODE) AS strRank
      FROM TN_MENU
      WHERE DELETE_AT = 'N'
      <isNotEmpty property="SearchUseAt">
        AND USE_AT = #SearchUseAt#
      </isNotEmpty>
      )
      START WITH UPPER_MENU_CODE = #SearchUpperMenuCode#
      CONNECT BY UPPER_MENU_CODE = PRIOR MENU_CODE
      ORDER SIBLINGS BY SORT_ORDR
    </select>


    <select id="MenuDac.SelectMenu" parameterClass="string" resultClass="MenuT">
      /* MenuDac.SelectMenu : 메뉴 상세 조회 */
      SELECT
      MENU_CODE                      AS "MenuCode"                     /* 메뉴코드 */
      , UPPER_MENU_CODE                AS "UpperMenuCode"                /* 상위메뉴코드 */
      , (SELECT MENU_NM FROM TN_MENU WHERE MENU_CODE = A.UPPER_MENU_CODE) AS "UpperMenuNm" /* 상위메뉴명 */
      , MENU_NM                        AS "MenuNm"                       /* 메뉴명 */
      , MENU_TY_CODE                   AS "MenuTyCode"                   /* 메뉴유형코드 */
      , CNTNTS_TY_CODE                 AS "CntntsTyCode"                 /* 컨텐츠유형코드 */
      , LINK_TY_CODE                   AS "LinkTyCode"                   /* 링크유형코드 */
      , MENU_URL                       AS "MenuUrl"                      /* 메뉴URL */
      , SORT_ORDR                      AS "SortOrdr"                     /* 정렬순서 */
      , USE_AT                         AS "UseAt"                        /* 사용여부 */
      , MENU_DC                        AS "MenuDc"                       /* 메뉴설명 */
      , DELETE_AT                      AS "DeleteAt"                     /* 삭제여부 */
      , REGIST_DT                      AS "RegistDt"                     /* 등록일시 */
      , REGISTER_ID                    AS "RegisterId"                   /* 등록자ID */
      , UPDT_DT                        AS "UpdtDt"                       /* 수정일시 */
      , UPDUSR_ID                      AS "UpdusrId"                     /* 수정자ID */
      FROM TN_MENU A
      WHERE MENU_CODE = #menuCode#
    </select>


    <select id="MenuDac.SelectLowerMenuList" parameterClass="string" resultClass="MenuT">
      /* MenuDac.SelectLowerMenuList : 하위 메뉴 목록 조회 */
      SELECT
      MENU_CODE                      AS "MenuCode"                     /* 메뉴코드 */
      , UPPER_MENU_CODE                AS "UpperMenuCode"                /* 상위메뉴코드 */
      , MENU_NM                        AS "MenuNm"                       /* 메뉴명 */
      , MENU_TY_CODE                   AS "MenuTyCode"                   /* 메뉴유형코드 */
      , CNTNTS_TY_CODE                 AS "CntntsTyCode"                 /* 컨텐츠유형코드 */
      , LINK_TY_CODE                   AS "LinkTyCode"                   /* 링크유형코드 */
      , MENU_URL                       AS "MenuUrl"                      /* 메뉴URL */
      , SORT_ORDR                      AS "SortOrdr"                     /* 정렬순서 */
      , USE_AT                         AS "UseAt"                        /* 사용여부 */
      , MENU_DC                        AS "MenuDc"                       /* 메뉴설명 */
      , DELETE_AT                      AS "DeleteAt"                     /* 삭제여부 */
      , REGIST_DT                      AS "RegistDt"                     /* 등록일시 */
      , REGISTER_ID                    AS "RegisterId"                   /* 등록자ID */
      , UPDT_DT                        AS "UpdtDt"                       /* 수정일시 */
      , UPDUSR_ID                      AS "UpdusrId"                     /* 수정자ID */
      FROM TN_MENU A
      WHERE UPPER_MENU_CODE = #UpperMenuCode#
      AND DELETE_AT = 'N'
      ORDER BY SORT_ORDR ASC, MENU_CODE ASC
    </select>


    <insert  id="MenuDac.InsertMenu" parameterClass="MenuT">
      <selectKey type="pre" resultClass="string" property="MenuCode">
        SELECT TRIM(TO_CHAR(NVL(MAX(MENU_CODE),0)+1,'00000')) FROM TN_MENU
      </selectKey>

      /* MenuDac.InsertMenu : 메뉴 등록 */
      INSERT INTO TN_MENU
      (
      MENU_CODE
      ,UPPER_MENU_CODE
      ,MENU_NM
      ,MENU_TY_CODE
      ,CNTNTS_TY_CODE
      ,LINK_TY_CODE
      ,MENU_URL
      ,SORT_ORDR
      ,USE_AT
      ,MENU_DC
      ,REGIST_DT
      ,REGISTER_ID
      ,UPDT_DT
      ,UPDUSR_ID
      )
      VALUES
      (
      #MenuCode#
      ,#UpperMenuCode#
      ,#MenuNm#
      ,#MenuTyCode#
      ,#CntntsTyCode#
      ,#LinkTyCode#
      ,#MenuUrl#
      ,#SortOrdr#
      ,#UseAt#
      ,#MenuDc#
      ,SYSDATE
      ,#RegisterId#
      ,SYSDATE
      ,#UpdusrId#
      )
    </insert>


    <update id="MenuDac.UpdateMenu" parameterClass="MenuT">
      /* MenuDac.UpdateMenu : 메뉴 수정 */
      UPDATE TN_MENU
      SET
      UPPER_MENU_CODE = #UpperMenuCode#
      ,MENU_NM = #MenuNm#
      ,MENU_TY_CODE = #MenuTyCode#
      ,CNTNTS_TY_CODE = #CntntsTyCode#
      ,MENU_URL = #MenuUrl#
      ,SORT_ORDR = #SortOrdr#
      ,USE_AT = #UseAt#
      ,MENU_DC = #MenuDc#
      ,UPDT_DT = SYSDATE
      ,UPDUSR_ID = #UpdusrId#
      WHERE
      MENU_CODE = #MenuCode#
    </update>


    <update id="MenuDac.DeleteMenu" parameterClass="MenuT">
      /* MenuDac.DeleteMenu : 메뉴 삭제 */
      UPDATE TN_MENU
      SET
      DELETE_AT = 'Y'
      ,UPDT_DT = SYSDATE
      ,UPDUSR_ID = #UpdusrId#
      WHERE
      MENU_CODE = #MenuCode#
    </update>


    <select id="MenuDac.SelectOneUpperMenu" parameterClass="string" resultClass="MenuT">
      /* MenuDac.SelectOneUpperMenu : 1단메뉴정보 조회 */
      SELECT  MENU_CODE AS "MenuCode"
      ,MENU_NM   AS "MenuNm"
      FROM (
      SELECT MENU_CODE , MENU_NM,  RANK( ) OVER (  ORDER BY LEVEL DESC) AS LVL
      FROM TN_MENU
      START WITH MENU_CODE = TRIM(#MenuCode#)
      CONNECT BY PRIOR  UPPER_MENU_CODE =  MENU_CODE
      )
      WHERE LVL = 2
    </select>


  </statements>
</sqlMap>